{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 2,
      "maxValue": 99,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "diskSizeGB": {
      "type": "int",
      "defaultValue": 500,
      "minValue": 50,
      "maxValue": 1023,
      "metadata": {
        "description": "Disk size in GB of a VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "ubuntu",
      "metadata": {
        "description": "The VM system user name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password of the VM system user if password-based authentication is used"
      }
    },
    "crateDbAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Application-level password of the CrateDB admin user"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key of the VM system user if key-based authentication is used"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Choose a password or SSH public key for the system user to access virtual machines"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet01"
    },
    "networkAddressPrefixes": {
      "type": "array",
      "defaultValue": [
        "172.16.0.0/24"
      ],
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet"
    },
    "networkSubnetPrefix": {
      "type": "string",
      "defaultValue": "172.16.0.0/24",
      "metadata": {
        "description": "Address prefix of the virtual subnet"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network"
      }
    },
    "dnsName": {
      "type": "string",
      "defaultValue": "cratedb",
      "metadata": {
        "description": "Public DNS name label for the load balancer"
      }
    },
    "publicIpNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Determines whether or not a new public IP address should be provisioned."
      }
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "cratetestip"
    },
    "publicIpResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the public IP address"
      }
    },
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "metadata": {
        "description": "SKU of the public IP address"
      }
    }
  },
  "variables": {
    "availabilitySetName": "AS-CrateDB",
    "lbName": "LB-CrateDB",
    "crateDbAdminUsername": "admin",
    "virtualMachineName": "CrateDB",
    "networkInterfaceName": "NIC-CrateDB",
    "networkSecurityGroupName": "NSG-CrateDB",
    "linuxConfiguration": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2021-01-01",
      "name": "pid-3e435af0-09e6-4d69-b4f0-b430165e1064",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2021-07-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformUpdateDomainCount": "[parameters('numberOfInstances')]",
        "platformFaultDomainCount": "[parameters('numberOfInstances')]"
      }
    },
    {
      "name": "[concat(variables('virtualMachineName'), '-', copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('virtualMachineName'), '-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "20_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": "[parameters('diskSizeGB')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('networkAddressPrefixes')]"
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('networkSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('networkInterfaceName'), copyindex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'BackendPool1')]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2021-05-01",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId(parameters('publicIpResourceGroupName'), 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleRESTCrateDB",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), 'LoadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'BackendPool1')]"
              },
              "protocol": "Tcp",
              "frontendPort": 4200,
              "backendPort": 4200,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'tcpProbe')]"
              }
            }
          },
          {
            "name": "LBRulePostgreSQLCrateDB",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), 'LoadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'BackendPool1')]"
              },
              "protocol": "Tcp",
              "frontendPort": 5432,
              "backendPort": 5432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'tcpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 4200,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('publicIpNewOrExisting'), 'new')]",
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "default-allow-crate",
            "properties": {
              "priority": 1001,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "4200"
            }
          },
          {
            "name": "default-allow-pgsql",
            "properties": {
              "priority": 1002,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "5432"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'), '-', copyIndex(), '/installcrate')]",
      "apiVersion": "2021-07-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineExtensionsLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "fileUris": [
            "https://raw.githubusercontent.com/crate/crate-cloud-templates/main/azure/install-crate.sh"
          ],
          "commandToExecute": "[concat('bash install-crate.sh \"', variables('virtualMachineName'), '\" ', parameters('numberOfInstances'), ' \"', variables('crateDbAdminUsername'), '\" \"', parameters('crateDbAdminPassword'), '\"')]"
        }
      }
    }
  ],
  "outputs": {
    "crateDBAdminUsername": {
      "type": "string",
      "value": "[variables('crateDbAdminUsername')]"
    },
    "crateDBApplicationURL": {
      "type": "string",
      "value": "[concat('http://', reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName')), '2021-05-01').dnsSettings.fqdn, ':4200')]"
    }
  }
}
